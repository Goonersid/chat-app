{"version":3,"sources":["webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/chat-room/chat-room.component.ts","webpack:///./src/app/chat-users/chat-users.component.ts","webpack:///./src/app/user-profile/user-profile.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/chat-room/chat-room.component.css","webpack:///./src/app/chat-users/chat-users.component.css","webpack:///./src/app/user-profile/user-profile.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/chat-room/chat-room.component.html","webpack:///./src/app/chat-users/chat-users.component.html","webpack:///./src/app/user-profile/user-profile.component.html","webpack:///./src/app/providers/af.service.ts","webpack:///./src/app/auth.service.ts","webpack:///./src/app/auth.config.ts","webpack:///./src/app/chat-users.service.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA,uCAAuC,WAAW;AAClD;AACA;AACA;;;;;;;;;;;;;;ACN+C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oFAAc,EAAE,CAAC;AACnB,CAAC;AAED,wHAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;ACVF;AACZ;AAOtC,IAAa,YAAY;IAEvB,sBAAmB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;IAC5B,CAAC;IACF,+BAAQ,GAAR;QACE,IAAI,CAAC,KAAK,GAAG,mBAAmB,CAAC;IACnC,CAAC;IACH,mBAAC;AAAD,CAAC;AAPY,YAAY;IALxB,+EAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,kCAAmC;QACnC,kCAAkC;KACnC,CAAC;yDAGyB,2DAAI,oBAAJ,2DAAI;GAFlB,YAAY,CAOxB;AAPwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRiC;AACjB;AACI;AACoB;AAElB;AACT;AAKhB;AACkC;AACqB;AACN;AACN;AACG;AACxB;AACiC;AAEtE,IAAM,cAAc,GAAG;IACxB,MAAM,EAAE,yCAAyC;IACjD,UAAU,EAAE,qCAAqC;IACjD,WAAW,EAAE,4CAA4C;IACzD,aAAa,EAAE,iCAAiC;IAChD,iBAAiB,EAAE,cAAc;CACtC,CAAC;AAEI,gCAAiC,IAAU,EAAE,OAAuB;IACxE,MAAM,CAAC,IAAI,uDAAQ,CAAE,IAAI,yDAAU,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;AAC1D,CAAC;AAyBD,IAAa,SAAS;IAAtB;IAAyB,CAAC;IAAD,gBAAC;AAAD,CAAC;AAAb,SAAS;IAxBrB,8EAAQ,CAAC;QACR,YAAY,EAAE;YACZ,oEAAY;YACZ,kGAAoB;YACpB,4FAAkB;YAClB,0FAAiB;SAClB;QACD,OAAO,EAAE;YACP,gFAAa;YACb,mEAAW;YACX,yDAAU;YACV,4DAAO;YACP,wEAAiB,CAAC,aAAa,CAAC,cAAc,CAAC;SAChD;QACD,SAAS,EAAE,CAAC,2DAAI,EAAE,wEAAmB,EAAE,6EAAgB;YACvD;gBACE,OAAO,EAAE,uDAAQ;gBACf,UAAU,EAAE,sBAAsB;gBAClC,IAAI,EAAE,CAAC,mDAAI,EAAE,6DAAc,CAAC;aAC/B;YACD,kEAAE;SACD;QACD,SAAS,EAAE,CAAC,oEAAY,CAAC;KAC1B,CAAC;GACW,SAAS,CAAI;AAAJ;;;;;;;;;;;;ACtDwC;AAI9D,IAAM,SAAS,GAAW,EAAE,CAAC;AAEtB,IAAM,mBAAmB,GAAU,EAEzC,CAAC;AAEK,IAAM,OAAO,GAAwB,qEAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;ACV/B;AACI;AAQjD,IAAa,iBAAiB;IAK5B,2BAAmB,SAAa;QAAb,cAAS,GAAT,SAAS,CAAI;QAC9B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;IAE1C,CAAC;IAED,uCAAW,GAAX;QACE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAClE,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;IAC7B,CAAC;IAED,iCAAK,GAAL,UAAM,KAAK;QACT,EAAE,EAAC,KAAK,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;YAC/B,MAAM,CAAC,IAAI,CAAC;QACd,IAAI;YACF,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IACD,gCAAI,GAAJ,UAAK,KAAK;QACR,EAAE,EAAC,KAAK,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;YAC/B,MAAM,CAAC,KAAK,CAAC;QACf,IAAI;YACF,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAGH,wBAAC;AAAD,CAAC;AA5BU;IAAR,2EAAK,EAAE;;+CAAU;AADP,iBAAiB;IAL7B,+EAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,kCAAyC;QACzC,kCAAwC;KACzC,CAAC;yDAM8B,iEAAE,oBAAF,iEAAE;GALrB,iBAAiB,CA6B7B;AA7B6B;;;;;;;;;;;;;;;;;;;;;;;ACV2B;AACZ;AACY;AAGzD,IAAM,iBAAiB,GAAY,oBAAoB,CAAC;AASxD,IAAa,kBAAkB;IAa7B,4BAAmB,SAAa,EAAQ,WAA6B;QAAlD,cAAS,GAAT,SAAS,CAAI;QAAQ,gBAAW,GAAX,WAAW,CAAkB;QACjE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;IACrC,CAAC;IANF,2CAAc,GAAd,UAAe,IAAI;QACnB,uEAAuE;QACrE,MAAM,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,KAAK,IAAE,IAAI,CAAC,YAAY,CAAC,KAAK,GAAC,iBAAiB,GAAC,EAAE;IACtF,CAAC;IAKD,qCAAQ,GAAR;QACE,OAAO,CAAC,GAAG,CAAC,cAAc,EAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC7C,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IACD,wCAAW,GAAX;QACE,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE;IAChC,CAAC;IACD,qCAAQ,GAAR,UAAS,IAAI;QACX,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IAC3B,CAAC;IAEH,yBAAC;AAAD,CAAC;AA3BU;IAAR,2EAAK,EAAE;;uDAAkB;AADf,kBAAkB;IAP9B,+EAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,kCAA0C;QAC1C,kCAAyC;KAC1C,CAAC;yDAgB8B,iEAAE,oBAAF,iEAAE,sDAAqB,6EAAgB,oBAAhB,6EAAgB;GAb1D,kBAAkB,CA4B9B;AA5B8B;;;;;;;;;;;;;;;;;;;;;ACbkB;AAOjD,IAAa,oBAAoB;IAE/B;IAAgB,CAAC;IAGnB,2BAAC;AAAD,CAAC;AAFY;IAAR,2EAAK,EAAE;;kDAAW;AAHV,oBAAoB;IALhC,+EAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,kCAA4C;QAC5C,kCAA2C;KAC5C,CAAC;;GACW,oBAAoB,CAKhC;AALgC;;;;;;;;;ACRjC;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEhF,mFALmF;AAK5E,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;ACPF;AACA;;;AAGA;AACA,qCAAsC,sBAAsB,gBAAgB,yBAAyB,yBAAyB,KAAK,kBAAkB,gCAAgC,KAAK;;AAE1L;;;AAGA;AACA,2C;;;;;;;ACXA;AACA;;;AAGA;AACA,oCAAqC,oBAAoB,oBAAoB,uBAAuB,KAAK;;AAEzG;;;AAGA;AACA,2C;;;;;;;ACXA;AACA;;;AAGA;AACA,iCAAkC,sBAAsB,KAAK,aAAa,sBAAsB,KAAK;;AAErG;;;AAGA;AACA,2C;;;;;;;ACXA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,miBAAmiB,OAAO,mbAAmb,yCAAyC,8jC;;;;;;;ACAtgC,wDAAwD,kBAAkB,89BAA89B,kBAAkB,6BAA6B,gDAAgD,sDAAsD,iBAAiB,uC;;;;;;;ACA9sC,2fAA2f,QAAQ,kBAAkB,8CAA8C,OAAO,GAAG,aAAa,4J;;;;;;;ACA1lB,gFAAgF,cAAc,yBAAyB,sEAAsE,uBAAuB,4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA3K;AACoD;AAG7F,IAAa,EAAE;IAOb,YAAmB,EAAe;QAAf,OAAE,GAAF,EAAE,CAAa;QAChC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAClD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC9C,CAAC;IACD;;;;OAIG;IACH,4BAAe,GAAf;QACC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC;YACvB,QAAQ,EAAE,mEAAa,CAAC,MAAM;YAC9B,MAAM,EAAE,iEAAW,CAAC,QAAQ;SAC7B,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;YACX,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACvB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,6BAAgB,GAAhB,UAAiB,MAAM;QAAvB,iBAoBC;QAnBC,IAAI,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,mBAAS;YAC7C,SAAS,CAAC,OAAO,CAAC,kBAAQ;gBACxB,EAAE,CAAC,CAAC,QAAQ,CAAC,KAAK,IAAI,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC;oBACjC,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAC;wBAC9B,MAAM,EAAG,MAAM;qBAChB,CAAC,CAAC,IAAI,CAAC,iBAAO;wBACd,EAAE,EAAC,MAAM,IAAE,SAAS,CAAC,EAAC;4BACnB,KAAI,CAAC,MAAM,EAAE,CAAC;4BACd,YAAY,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;4BACpC,YAAY,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;wBAC3C,CAAC;oBAED,CAAC,CAAC;gBACJ,CAAC;YAEH,CAAC,EAAE,KAAI,CAAC,CAAC;YACV,EAAE,EAAC,UAAU,CAAC;gBAAA,UAAU,CAAC,WAAW,EAAE,CAAC;QAC1C,CAAC,CAAC,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IACD,uBAAU,GAAV;IACA,CAAC;IACD,8BAAiB,GAAjB,UAAmB,KAAK;QACpB,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAC;YACnC,KAAK,EAAE;gBACL,YAAY,EAAE,OAAO;gBACrB,OAAO,EAAE,KAAK;aACf;SACF,CAAC,CAAC;IACP,CAAC;IACD;;OAEG;IACH,mBAAM,GAAN;QACE,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;IAC/B,CAAC;IACD;;OAEG;IACH,wBAAW,GAAX;QAAA,iBAmBC;QAlBC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,iBAAO;YACpE,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;gBACxB,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC;oBACd,KAAK,EAAE,KAAI,CAAC,KAAK;oBACjB,WAAW,EAAE,KAAI,CAAC,WAAW;oBAC7B,MAAM,EAAE,QAAQ;iBACjB,CAAC,CAAC;YACL,CAAC;YACD,IAAI,CAAC,CAAC;gBACJ,KAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;YAClC,CAAC;YACD,gDAAgD;YAChD,KAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;QAChC,CAAC,CAAC;QACF,uDAAuD;QAGzD,OAAO,CAAC,GAAG,CAAE,OAAO,EAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACjC,CAAC;IAED;;;OAGG;IACH,wBAAW,GAAX,UAAY,IAAI,EAAC,KAAK;QACpB,IAAI,OAAO,GAAG;YACZ,OAAO,EAAE,IAAI;YACb,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,EAAE,EAAE,KAAK;YACT,SAAS,EAAE,IAAI,CAAC,GAAG,EAAE;SACtB,CAAC;QACF,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC9B,CAAC;IACH,SAAC;AAAD,CAAC;AAnGY,EAAE;IADd,gFAAU,EAAE;yDAQY,iEAAW,oBAAX,iEAAW;GAPvB,EAAE,CAmGd;AAnGc;;;;;;;;;;;;;;;;;;;;;;;;;ACH0B;AACG;AACD;AACI;AAM/C,IAAa,IAAI;IAOf,cAAmB,SAAa;QAAhC,iBAmEC;QAnEkB,cAAS,GAAT,SAAS,CAAI;QANhC,kBAAkB;QAElB,SAAI,GAAG,IAAI,SAAS,CAAC,8DAAQ,CAAC,QAAQ,EAAE,8DAAQ,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;QAC7D,UAAK,GAAG,IAAI,KAAK,CAAC,EAAE,MAAM,EAAE,8DAAQ,CAAC,MAAM,EAAE,QAAQ,EAAE,8DAAQ,CAAC,QAAQ,EAAE,CAAC;QAIzE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;QAChE,8CAA8C;QAC9C,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CACtB,UAAC,IAAI;YACH,EAAE,EAAC,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,EAAC;gBACxC,MAAM,CAAC;YACT,CAAC;YACD,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,IAAI,KAAI,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;gBAC9C,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;gBAE9B,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,KAAI,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,UAAC,IAAI;oBACzC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;oBAClB,KAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;gBAC/B,CAAC,CAAC,CAAC;YAEL,CAAC;YACD,IAAI,CAAC,CAAC;gBACJ,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;gBACvC,sEAAsE;gBACtE,KAAI,CAAC,SAAS,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC;gBACrD,KAAI,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;gBACzC,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACzB,CAAC;QACH,CAAC,CACF,CAAC;QACV,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,eAAe,EAAE,UAAC,UAAU;YACvC,KAAI,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,WAAW,EAAE,UAAC,KAAK,EAAE,OAAO;gBAC3D,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oBACV,eAAe;oBACf,MAAM,CAAC;gBACT,CAAC;gBACD,EAAE,EAAC,CAAC,KAAI,CAAC,UAAU,CAAC,EAAC;oBACnB,KAAI,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,UAAC,IAAI;wBACjC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;wBAClB,KAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;oBAC/B,CAAC,CAAC,CAAC;gBACb,CAAC;gBACD,YAAY,CAAC,OAAO,CAAC,aAAa,EAAE,UAAU,CAAC,WAAW,CAAC,CAAC;gBAC5D,YAAY,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;gBACzD,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,UAAU,CAAC,OAAO,CAAC,CAAC;gBACrD,KAAI,CAAC,YAAY,GAAG,OAAO,CAAC;gBAE5B,0DAA0D;gBAC1D,IAAI,OAAO,GAAG;oBACZ,OAAO,EAAE,KAAI,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,SAAS,CAAC;oBACtD,QAAQ,EAAE,UAAU,CAAC,OAAO;oBAC5B,GAAG,EAAE,UAAU;oBACf,KAAK,EAAE,sBAAsB;iBAC9B,CAAC;gBACF,uCAAuC;gBACvC,KAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,OAAO,EAAE,UAAC,GAAG,EAAE,MAAM;oBACjD,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBAET,2DAA2D;wBAC3D,oDAAoD;wBACpD,wDAAwD;oBAI1D,CAAC;gBACH,CAAC,CAAC,CAAC;YAEL,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAIM,oBAAK,GAAZ;QACE,8CAA8C;QAC9C,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;IACnB,CAAC;IAEM,4BAAa,GAApB;QACE,oCAAoC;QACpC,mEAAmE;QACnE,MAAM,CAAC,oFAAe,EAAE,CAAC;IAC3B,CAAC;IAEM,6BAAc,GAArB;QACE,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;IAC3B,CAAC;IAEM,qBAAM,GAAb;QACE,iCAAiC;QACjC,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;IAC7C,CAAC;IACH,WAAC;AAAD,CAAC;AAjGY,IAAI;IADhB,gFAAU,EAAE;yDAQmB,iEAAE,oBAAF,iEAAE;GAPrB,IAAI,CAiGhB;AAjGgB;;;;;;;;;;;ACHV,IAAM,QAAQ,GAAsB;IACvC,QAAQ,EAAE,kCAAkC;IAC5C,MAAM,EAAE,oBAAoB;IAC5B,aAAa,EAAC,yCAAyC;IACvD,QAAQ,EAAG,wCAAwC;CACtD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXuC;AACH;AACK;AAC6B;AAChC;AACT;AACM;AAGrC,IAAa,gBAAgB;IAI3B,0BAAoB,IAAS,EAAS,IAAU,EAAU,QAAkB;QAAxD,SAAI,GAAJ,IAAI,CAAK;QAAS,SAAI,GAAJ,IAAI,CAAM;QAAU,aAAQ,GAAR,QAAQ,CAAU;QADpE,aAAQ,GAAG,8DAAQ,CAAC,aAAa,CAAC;IACsC,CAAC;IAClF,sCAAW,GAAX;QAAA,iBAQC;QAPA,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE;aACb,IAAI,CAAC,CAAC,eAAK;YACV,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,YAAY,CAAC,OAAO,CAAC,UAAU,EAAC,KAAK,CAAC,YAAY,CAAC;YACnD,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC,CAAC;IACX,CAAC;IACA,uCAAY,GAAZ,UAAa,KAAK;QAAlB,iBASC;QARC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;aACpC,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC;aACtB,SAAS,CACR,cAAI,IAAI,YAAI,CAAC,QAAQ,GAAE,IAAI,EAAnB,CAAmB,EAC3B,eAAK,IAAI,YAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,KAAK,IAAI,KAAK,EAApC,CAAoC,CAC9C,CAAC;IAGN,CAAC;IAED,iCAAM,GAAN;QACE,IAAI,OAAO,GAAG,IAAI,sDAAO,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAC,CAAC,CAAC;QAChE,MAAM,CAAC,IAAI,CAAC,IAAI;aACb,IAAI,CAAC,8DAAQ,CAAC,QAAQ,EACrB,uNAAuN,EACrN,EAAC,OAAO,EAAG,OAAO,EAAC,CAAC;aACvB,SAAS,EAAE;aACX,IAAI,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC;aACvB,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC7B,CAAC;IACO,sCAAW,GAAnB,UAAoB,GAAa;QAC/B,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;QACtB,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IACO,sCAAW,GAAnB,UAAoB,KAAU;QAC5B,OAAO,CAAC,KAAK,CAAC,mBAAmB,EAAE,KAAK,CAAC,CAAC,CAAC,yBAAyB;QACpE,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,CAAC;IAChD,CAAC;IACH,uBAAC;AAAD,CAAC;AA3CY,gBAAgB;IAD5B,gFAAU,EAAE;yDAKc,2DAAI,oBAAJ,2DAAI,sDAAe,mDAAI,oBAAJ,mDAAI,sDAAoB,sDAAQ,oBAAR,sDAAQ;GAJjE,gBAAgB,CA2C5B;AA3C4B","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 104;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 104\n// module chunks = 1","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component, OnInit } from '@angular/core';\nimport { Auth } from './auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title:string;\n  constructor(public auth: Auth) {\n   }\n  ngOnInit(): void {\n    this.title = 'G-Chat Dashboard!';\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule, Http, RequestOptions } from '@angular/http';\n\nimport { AppComponent } from './app.component';\nimport { Auth } from './auth.service';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport {\r\n  routing,\n  appRoutingProviders\r\n} from './app.routes';\nimport { ChatUsersService } from './chat-users.service';\nimport { UserProfileComponent } from './user-profile/user-profile.component';\nimport { ChatUsersComponent } from './chat-users/chat-users.component';\nimport { provideAuth, AuthHttp, AuthConfig } from 'angular2-jwt';\nimport { ChatRoomComponent } from './chat-room/chat-room.component';\nimport { AF } from './providers/af.service';\nimport { AngularFireModule, AuthProviders, AuthMethods } from 'angularfire2';\n\nexport const firebaseConfig = {\n      apiKey: \"AIzaSyA5WkUYT4oJKfcKeuaZ3xAc9EigwBBR2Fc\",\n      authDomain: \"gchat-project-6a119.firebaseapp.com\",\n      databaseURL: \"https://gchat-project-6a119.firebaseio.com\",\n      storageBucket: \"gchat-project-6a119.appspot.com\",\n      messagingSenderId: \"171697051876\"\n};\n\nexport function authHttpServiceFactory(http: Http, options: RequestOptions) {\n  return new AuthHttp( new AuthConfig({}), http, options);\n}\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserProfileComponent,\n    ChatUsersComponent,\n    ChatRoomComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    routing,\n    AngularFireModule.initializeApp(firebaseConfig)\n  ], \n  providers: [Auth, appRoutingProviders, ChatUsersService,\n  {\n    provide: AuthHttp,\n      useFactory: authHttpServiceFactory,\n      deps: [Http, RequestOptions]\n  },\n  AF\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { ModuleWithProviders }         from '@angular/core';\nimport { Routes, RouterModule }        from '@angular/router';\n\n\n\nconst appRoutes: Routes = [];\n\nexport const appRoutingProviders: any[] = [\n\n];\n\nexport const routing: ModuleWithProviders = RouterModule.forRoot(appRoutes);\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.routes.ts","import { Auth } from '../auth.service';\nimport { AF } from '../providers/af.service';\nimport { Component, Input } from '@angular/core';\nimport { FirebaseListObservable } from 'angularfire2';\n\n@Component({\n  selector: 'chat-room',\n  templateUrl: './chat-room.component.html',\n  styleUrls: ['./chat-room.component.css']\n})\nexport class ChatRoomComponent {\n  @Input() user:any;\n  public newMessage: string;\n  public messages: FirebaseListObservable<any>;\n  public chatbox : any;\n  constructor(public afService: AF) {\n    this.messages = this.afService.messages;\n    \n  }\n  \n  sendMessage(){\n    this.afService.sendMessage(this.user.chatmessage,this.user.email);\n    this.user.chatmessage = '';\n  }\n\n  isYou(email) {\n    if(email == this.afService.email)\n      return true;\n    else\n      return false;\n  }\n  isMe(email) {\n    if(email == this.afService.email)\n      return false;\n    else\n      return true;\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/chat-room/chat-room.component.ts","import { ChatUsersService } from '../chat-users.service';\nimport { AF } from '../providers/af.service';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { FirebaseListObservable } from 'angularfire2';\n\nconst selectedUserClass : string = \"bg-info text-white\";\n\n@Component({\n  selector: 'chat-users',\n  templateUrl: './chat-users.component.html',\n  styleUrls: ['./chat-users.component.css']\n})\n\n\nexport class ChatUsersComponent implements OnInit {\n  @Input() currentUser: any;\n  allUsers : any;\n  token : any;\n  public newMessage: string;\n  public users: FirebaseListObservable<any>;\n  public chatbox : any;\n  \n  selectedUser : any;\n  processClasses(user) {\n  // CSS classes: added/removed per current state of component properties\n    return this.selectedUser && user.email==this.selectedUser.email?selectedUserClass:\"\"\n  }\n  constructor(public afService: AF,public chatService: ChatUsersService) {\n      this.users = this.afService.users;\n   }\n    \n  ngOnInit() {\n    console.log(\"current user\",this.currentUser);\n    this.getAllUsers();\n  }\n  getAllUsers() {\n    this.chatService.getAllUsers()\n  }\n  onSelect(user){\n    this.selectedUser = user;\n  }\n  \n}\n \n\n\n// WEBPACK FOOTER //\n// ./src/app/chat-users/chat-users.component.ts","import { Auth } from '../auth.service';\nimport { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.css']\n})\nexport class UserProfileComponent {\n\n  constructor() { }\n    @Input() user: any;\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/user-profile/user-profile.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".gchat-mask{\\r\\n\\tposition :fixed;\\r\\n\\ttop : 50%;\\r\\n\\tfont-weight : bold;\\r\\n\\tborder : 2px solid;\\r\\n} \\r\\n.gchat-login{\\r\\n\\tpadding : 1px 5px 4px 1px;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 185\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"#chat-room{\\r\\n\\tdisplay:block;\\r\\n\\toverflow:auto;\\r\\n\\tmax-height:300px;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/chat-room/chat-room.component.css\n// module id = 186\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".online{\\r\\n\\tcolor : #5fd85f;\\r\\n}\\r\\n.offline{\\r\\n\\tcolor : #c5b9b9;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/chat-users/chat-users.component.css\n// module id = 187\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user-profile/user-profile.component.css\n// module id = 188\n// module chunks = 1","module.exports = \"<nav class=\\\"navbar navbar-toggleable-md navbar-light bg-faded\\\">\\n\\t<button class=\\\"navbar-toggler navbar-toggler-right\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\" aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n   \\t\\t <span class=\\\"navbar-toggler-icon\\\"></span>\\n  \\t</button>\\n\\t<div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNav\\\">\\n\\t<ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"navbar-brand\\\" href=\\\"#\\\">{{title}}</a> \\n      </li>\\n\\t</ul>\\n\\t<ul class=\\\"navbar-nav\\\">\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"!auth.authenticated()\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=\\\"auth.login()\\\" >\\n        <i class=\\\"fa fa-sign-in\\\" aria-hidden=\\\"true\\\"></i> Log In</button>\\n      </li>\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"auth.authenticated() && auth.loggedInUser\\\">\\n      \\t<span class=\\\"navbar-text\\\">\\n\\t      Welcome, {{auth.loggedInUser.given_name| uppercase}}!!\\n\\t    </span>\\n        <button class=\\\"btn btn-info\\\" (click)=\\\"auth.logout()\\\">Log Out</button>\\n      </li>\\n    </ul>\\n    </div> \\n</nav>\\n<div class =\\\"container\\\">\\n\\t<div class=\\\"row justify-content-center\\\" *ngIf=\\\"!auth.authenticated()\\\">\\n\\t\\t<div class = \\\"col col-md-auto gchat-mask\\\" >\\n\\t\\t<i class=\\\"fa fa-exclamation-triangle\\\" aria-hidden=\\\"true\\\"></i> \\n\\t\\tPlease <button type=\\\"button\\\" class=\\\"btn btn-link gchat-login\\\" (click)=\\\"auth.login()\\\">login</button>to connect !!</div>\\n\\t</div> \\n\\t<div class=\\\"row\\\" *ngIf=\\\"auth.authenticated() && auth.loggedInUser\\\"> \\n\\t\\t<div class = \\\"col-3\\\" ><h2>Your profile</h2>\\n\\t\\t\\t<user-profile [user]=\\\"auth.loggedInUser\\\">Initializing user profile..Please wait</user-profile>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col\\\" *ngIf = \\\"auth.isLoggedIn\\\">\\n\\t\\t\\t<chat-users [currentUser]=\\\"auth.loggedInUser\\\">Initializing Contact List..Please wait</chat-users>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col\\\" *ngIf = \\\"!auth.isLoggedIn\\\">\\n\\t\\t\\tPlease wait while we initialize firebase..This may take a while\\n\\t\\t</div>\\n\\t</div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 197\n// module chunks = 1","module.exports = \"<h5 *ngIf = \\\"user\\\">Your chat with {{user.displayName}}</h5>\\r\\n<div class=\\\"form-group\\\">\\r\\n    <input type=\\\"text\\\" class=\\\"form-control\\\"  [(ngModel)]=\\\"user.chatmessage\\\" (keyup.enter)=\\\"sendMessage()\\\"\\r\\n    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t aria-describedby=\\\"chatHelp\\\" placeholder=\\\"Click to start typing..\\\"/>\\r\\n    <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\">Press enter key to send your message</small>\\r\\n</div>\\r\\n<div id=\\\"chat-room\\\">\\r\\n   <div class=\\\"list-group\\\"  *ngFor=\\\"let message of messages | async\\\">\\r\\n   \\t<a *ngIf=\\\"(message.to==afService.email && message.email==user.email)||\\r\\n   \\t \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(message.email==afService.email && message.to==user.email )\\\"\\r\\n   \\t\\t\\tclass=\\\"list-group-item list-group-item-action flex-column align-items-start\\\">\\r\\n   \\t\\t\\t\\t\\t\\t\\t \\r\\n   \\t\\t<div class=\\\"d-flex w-100 justify-content-between\\\">\\r\\n\\t      \\t<h5 class=\\\"mb-1\\\" *ngIf= \\\"message.email==afService.email\\\">You:</h5>\\r\\n\\t      \\t<h5 class=\\\"mb-1\\\" *ngIf= \\\"message.to==afService.email\\\">{{user.displayName}}:</h5>\\r\\n\\t      \\t<small>{{message.timestamp | date:\\\"dd-MMM-yy hh:mm a\\\"}}</small>\\r\\n\\t    </div>\\r\\n\\t    <p class=\\\"mb-1\\\">{{message.message}}</p>\\r\\n   \\t</a>\\r\\n</div>\\r\\n</div> \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/chat-room/chat-room.component.html\n// module id = 198\n// module chunks = 1","module.exports = \"\\n<div class=\\\"row\\\" *ngIf=\\\"afService.af.auth\\\">\\n<div class=\\\"col-4\\\">\\n<h2>List of users</h2>\\n<div *ngFor=\\\"let user of users | async\\\">\\n\\n    </div>\\n<div class=\\\"list-group\\\" *ngFor=\\\"let user of users | async\\\">\\n  \\t\\t<a *ngIf=\\\"user.email != currentUser.email\\\"\\n  \\t\\t\\t\\t[ngClass]=\\\"processClasses(user)\\\" class=\\\"list-group-item list-group-item-action\\\" (click)=\\\"onSelect(user)\\\">\\n  \\t\\t\\t\\t<i class=\\\"fa fa-circle\\\" [ngClass]=\\\"user.status\\\" aria-hidden=\\\"true\\\"></i>&nbsp;&nbsp;{{user.displayName}}\\n  \\t\\t\\t\\t<small class=\\\"text-muted\\\">&nbsp;-&nbsp;({{user.status}})</small>\\n  \\t\\t\\t\\t</a>\\n</div>\\n</div>\\n<div class =\\\"col\\\">\\n\\t<chat-room *ngIf=\\\"selectedUser\\\" [user]=\\\"selectedUser\\\"></chat-room>\\t\\n</div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/chat-users/chat-users.component.html\n// module id = 199\n// module chunks = 1","module.exports = \"<div class=\\\"card\\\">\\r\\n  <img class=\\\"card-img-top\\\" src=\\\"{{user.picture}}\\\" style=\\\"height: 15rem;\\\">\\r\\n  <div class=\\\"card-block\\\">\\r\\n    <h6 class=\\\"card-title\\\">{{user.name | uppercase}}</h6>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user-profile/user-profile.component.html\n// module id = 200\n// module chunks = 1","import {Injectable} from \"@angular/core\";\nimport {AngularFire, AuthProviders, AuthMethods, FirebaseListObservable} from 'angularfire2';\n\n@Injectable()\nexport class AF {\n  public messages: FirebaseListObservable<any>;\n  public users: FirebaseListObservable<any>;\n  public displayName: string;\n  public email: string;\n  public chatEnable : string;\n  subscriber:any;\n  constructor(public af: AngularFire) {\n    this.messages = this.af.database.list('messages');\n    this.users = this.af.database.list('users');\n  }\n  /**\n   * Logs in the user\n   * @returns {firebase.Promise<FirebaseAuthState>}\n   * @param {delegate token from auth0}\n   */\n  loginWithGoogle()  {\n   return this.af.auth.login({\n      provider: AuthProviders.Google,\n      method: AuthMethods.Redirect\n    }).catch((error)=>{\n        console.log(error);\n    });\n  }\n  updateUserStatus(status){\n    var usersSubsc = this.users.subscribe(snapshots => {\n      snapshots.forEach(snapshot => {\n        if (snapshot.email == this.email) {\n          this.users.update(snapshot.$key,{\n            status : status\n          }).then(results => {\n           if(status==\"offline\"){\n              this.logout();\n              localStorage.removeItem('id_token');\n              localStorage.removeItem(\"accessToken\");\n          }\n          \n          })\n        } \n\n      }, this);\n     if(usersSubsc)usersSubsc.unsubscribe();\n  });\n    return this.users;\n  }\n  getUserKey(){\n  }\n  checkIfUserExists (email){\n      return this.af.database.list('users',{\n        query :{\n          orderByChild: 'email',\n          equalTo: email\n        }\n      });\n  }\n  /**\n   * Logs out the current user\n   */\n  logout() {\n    return this.af.auth.logout();\n  }\n  /**\n   *\n   */\n  addUserInfo() {\n    this.subscriber = this.checkIfUserExists(this.email).subscribe(results => {\n      if (results.length == 0) {\n        this.users.push({\n          email: this.email,\n          displayName: this.displayName,\n          status: \"online\"\n        });\n      }\n      else {\n        this.updateUserStatus(\"online\");\n      }\n      //un subscribing after login as this is desired \n      this.subscriber.unsubscribe();\n    })\n    //We saved their auth info now save the rest to the db.\n    \n  \n  console.log( \"users\",this.users);\n  }\n\n  /**\n   * Saves a message to the Firebase Realtime Database\n   * @param text\n   */\n  sendMessage(text,email) {\n    var message = {\n      message: text,\n      displayName: this.displayName,\n      email: this.email,\n      to: email,\n      timestamp: Date.now()\n    };\n    this.messages.push(message);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/providers/af.service.ts","\nimport { myConfig } from './auth.config';\nimport { AF } from './providers/af.service';\nimport { Injectable } from '@angular/core';\nimport { tokenNotExpired } from 'angular2-jwt';\n// Avoid name not found warnings\ndeclare var Auth0Lock: any;\ndeclare var Auth0: any;\n\n@Injectable()\nexport class Auth {\n  // Configure Auth0\n\n  lock = new Auth0Lock(myConfig.clientID, myConfig.domain, {});\n  auth0 = new Auth0({ domain: myConfig.domain, clientID: myConfig.clientID })\n  isLoggedIn;\n  loggedInUser: Object;\n  constructor(public afService: AF) {\n    this.loggedInUser = JSON.parse(localStorage.getItem('profile'));\n    // Add callback for lock `authenticated` event\n    var ctxt = this;\n    this.afService.af.auth.subscribe(\n              (auth) => {\n                if(auth == null && !ctxt.authenticated()){\n                  return;\n                }\n                else if (auth == null && this.authenticated()) {\n                  console.log(\"Not Logged in.\");\n\n                  this.isLoggedIn = false;\n                  this.afService.loginWithGoogle().then((data) => {\n                    console.log(data);\n                    this.afService.addUserInfo();\n                  });\n                  \n                }\n                else {\n                  console.log(\"Successfully Logged in.\");\n                  // Set the Display Name and Email so we can attribute messages to them\n                  this.afService.displayName = auth.google.displayName;\n                  this.afService.email = auth.google.email;\n                  this.isLoggedIn = true;\n                }\n              }\n            );\n    this.lock.on(\"authenticated\", (authResult) => {\n      this.lock.getUserInfo(authResult.accessToken, (error, profile) => {\n        if (error) {\n          // Handle error\n          return;\n        }\n        if(!this.isLoggedIn){\n          this.afService.loginWithGoogle().then((data) => {\n                    console.log(data);\n                    this.afService.addUserInfo();\n                  });\n        }\n        localStorage.setItem(\"accessToken\", authResult.accessToken);\n        localStorage.setItem(\"profile\", JSON.stringify(profile));\n        localStorage.setItem('id_token', authResult.idToken);\n        this.loggedInUser = profile;\n        \n        // Set the options to retreive a firebase delegation token\n        var options = {\n          company: this.loggedInUser['firebase_data']['company'],\n          id_token: authResult.idToken,\n          api: 'firebase',\n          scope: \"openid profile email\"\n        };\n        // Make a call to the Auth0 '/delegate'\n        this.auth0.getDelegationToken(options, (err, result) => {\n          if (!err) {\n            \n            //we could do this or pass this token delegate to firebase.\n            //https://github.com/angular/angularfire2/issues/286\n            // Exchange the delegate token for a Firebase auth token\n\n            \n            \n          }\n        });\n\n      });\n    });\n  }\n\n\n\n  public login() {\n    // Call the show method to display the widget.\n    this.lock.show();\n  }\n\n  public authenticated() {\n    // Check if there's an unexpired JWT\n    // This searches for an item in localStorage with key == 'id_token'\n    return tokenNotExpired();\n  }\n\n  public getUserProfile() {\n    return this.loggedInUser;\n  }\n    \n  public logout() {\n    // Remove token from localStorage\n    this.afService.updateUserStatus('offline');\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/auth.service.ts","interface AuthConfiguration {\n    clientID: string,\n    domain: string,\n   fetchUsersUrl:string,\n   oauthUrl : string\n}\n\nexport const myConfig: AuthConfiguration = {\n    clientID: 'k1KcHLpOsGRAH2UsGfHIiAOjd5W3eSOc',\n    domain: 'gchat.au.auth0.com',\n    fetchUsersUrl:\"https://gchat.au.auth0.com/api/v2/users\",\n    oauthUrl : 'https://gchat.au.auth0.com/oauth/token'\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/auth.config.ts","\nimport { myConfig } from './auth.config';\nimport { Auth } from './auth.service';\nimport { Injectable } from '@angular/core';\nimport { Http, Headers, RequestOptions, Response } from '@angular/http';\nimport { AuthHttp } from 'angular2-jwt';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise';\n\n@Injectable()\nexport class ChatUsersService {\n  authToken : Object;\n  allUsers : any;\n  private usersUrl = myConfig.fetchUsersUrl;\n  constructor(private auth:Auth,private http: Http, private authHttp: AuthHttp) { }\n getAllUsers(){\n  return this.create()\n        .then((token => {\n          console.log(token);\n          localStorage.setItem('id_token',token.access_token)\n          this.authToken = token;\n          this.requestUsers(token);\n        }));\n }\n  requestUsers(token){\n    return this.authHttp.get(this.usersUrl)\n      .map(res => res.json())\n      .subscribe(\n        data => this.allUsers= data,\n        error => this.allUsers = error._body || error\n      );\n    \n    \n  }\n\n  create() {\n    let headers = new Headers({'Content-Type': 'application/json'});\n    return this.http\n      .post(myConfig.oauthUrl, \n        '{\"client_id\":\"vPaSA7LL0a932iSo5DMQn3B4kNJQKr1J\",\"client_secret\":\"TUZyy3x0W80OlanWRdRMJWAJo4DmG1YB7RYoaDxynZx3GLDbcgqRzK_83cDdatKP\",\"audience\":\"https://gchat.au.auth0.com/api/v2/\",\"grant_type\":\"client_credentials\"}'\n        , {headers : headers})\n      .toPromise()\n      .then(res => res.json())\n      .catch(this.handleError);\n  }\n  private extractData(res: Response) {\n    let body = res.json();\n    return body;\n  }\n  private handleError(error: any): Promise<any> {\n    console.error('An error occurred', error); // for demo purposes only\n    return Promise.reject(error.message || error);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/chat-users.service.ts"],"sourceRoot":""}